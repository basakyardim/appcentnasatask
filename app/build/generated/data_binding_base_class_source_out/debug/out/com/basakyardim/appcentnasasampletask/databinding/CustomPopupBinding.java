// Generated by view binder compiler. Do not edit!
package com.basakyardim.appcentnasasampletask.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.basakyardim.appcentnasasampletask.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomPopupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final TextView popupCamera;

  @NonNull
  public final ImageButton popupCancelButton;

  @NonNull
  public final TextView popupDate;

  @NonNull
  public final ImageView popupImage;

  @NonNull
  public final TextView popupLand;

  @NonNull
  public final TextView popupLaunch;

  @NonNull
  public final TextView popupRoverName;

  @NonNull
  public final TextView popupState;

  private CustomPopupBinding(@NonNull ConstraintLayout rootView, @NonNull Guideline guideline,
      @NonNull TextView popupCamera, @NonNull ImageButton popupCancelButton,
      @NonNull TextView popupDate, @NonNull ImageView popupImage, @NonNull TextView popupLand,
      @NonNull TextView popupLaunch, @NonNull TextView popupRoverName,
      @NonNull TextView popupState) {
    this.rootView = rootView;
    this.guideline = guideline;
    this.popupCamera = popupCamera;
    this.popupCancelButton = popupCancelButton;
    this.popupDate = popupDate;
    this.popupImage = popupImage;
    this.popupLand = popupLand;
    this.popupLaunch = popupLaunch;
    this.popupRoverName = popupRoverName;
    this.popupState = popupState;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline;
      Guideline guideline = rootView.findViewById(id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.popupCamera;
      TextView popupCamera = rootView.findViewById(id);
      if (popupCamera == null) {
        break missingId;
      }

      id = R.id.popupCancelButton;
      ImageButton popupCancelButton = rootView.findViewById(id);
      if (popupCancelButton == null) {
        break missingId;
      }

      id = R.id.popupDate;
      TextView popupDate = rootView.findViewById(id);
      if (popupDate == null) {
        break missingId;
      }

      id = R.id.popupImage;
      ImageView popupImage = rootView.findViewById(id);
      if (popupImage == null) {
        break missingId;
      }

      id = R.id.popupLand;
      TextView popupLand = rootView.findViewById(id);
      if (popupLand == null) {
        break missingId;
      }

      id = R.id.popupLaunch;
      TextView popupLaunch = rootView.findViewById(id);
      if (popupLaunch == null) {
        break missingId;
      }

      id = R.id.popupRoverName;
      TextView popupRoverName = rootView.findViewById(id);
      if (popupRoverName == null) {
        break missingId;
      }

      id = R.id.popupState;
      TextView popupState = rootView.findViewById(id);
      if (popupState == null) {
        break missingId;
      }

      return new CustomPopupBinding((ConstraintLayout) rootView, guideline, popupCamera,
          popupCancelButton, popupDate, popupImage, popupLand, popupLaunch, popupRoverName,
          popupState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
